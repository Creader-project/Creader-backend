Index: creader/TheBookshelf/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for TheBookShelf project.\r\n\r\nGenerated by 'django-admin startproject' using Django 3.2.3.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/3.2/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/3.2/ref/settings/\r\n\"\"\"\r\nimport datetime\r\nimport os\r\nfrom pathlib import Path\r\n\r\nimport django_heroku\r\n\r\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\r\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\n\r\n# ADD THESE TWO LINES\r\nTEMPLATES_DIR = os.path.join(BASE_DIR, 'creader/../templates')\r\nFRONTEND_DIR = os.path.join(BASE_DIR, 'frontend')\r\n\r\nSOCIAL_AUTH_URL_NAMESPACE = 'drf'\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = os.getenv('django-insecure-hu3_1d29+@zz0t^g59miaqx%1#o7#v^c8#7eupfy-n#x0y)b=x', 'change-in-production')\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\n# if \"DYNO\" in os.environ:\r\nDEBUG = True\r\nALLOWED_HOSTS = ['https://fathomless-tundra-48163.herokuapp.com/']\r\nSTATIC_ROOT = 'static'\r\n# DEBUG=False\r\n# Activate Django-Heroku.\r\ndjango_heroku.settings(locals(), staticfiles=False, allowed_hosts=False)\r\n\r\n# ALLOWED_HOSTS = []\r\nAUTH_USER_MODEL = 'user.AuthUser'\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    # customised app\r\n    'creader.TheBookshelf.app',\r\n    'creader.TheBookshelf.user',\r\n    'creader.TheBookshelf.payment',\r\n    'creader.TheBookshelf.product',\r\n    'creader.TheBookshelf.bookcase',\r\n    'creader.TheBookshelf.bookitem',\r\n    'creader.TheBookshelf.comment',\r\n    'creader.TheBookshelf.transactions',\r\n\r\n\r\n    'wagtail.contrib.forms',\r\n    'wagtail.contrib.redirects',\r\n    'wagtail.contrib.modeladmin',\r\n    'wagtail.embeds',\r\n    'wagtail.sites',\r\n    'wagtail.users',\r\n    'wagtail.snippets',\r\n    'wagtail.documents',\r\n    'wagtail.images',\r\n    'wagtail.search',\r\n    'wagtail.admin',\r\n    'wagtail.core',\r\n\r\n    'taggit',\r\n    'modelcluster',\r\n    'wagtail.api.v2',\r\n\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'django.contrib.sites',\r\n\r\n    # third party\r\n    'rest_framework',\r\n    'corsheaders',\r\n    'oauth2_provider',\r\n    'social_django',\r\n    'drf_social_oauth2',\r\n    'drf_yasg',\r\n    'notifications'\r\n]\r\n\r\n# site id\r\nSITE_ID = 1\r\n\r\n# Middleware\r\nMIDDLEWARE = [\r\n    'whitenoise.middleware.WhiteNoiseMiddleware',  # First in list\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n    # add these\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'wagtail.contrib.redirects.middleware.RedirectMiddleware',\r\n]\r\n# Authentication backends\r\nAUTHENTICATION_BACKENDS = (\r\n    'drf_social_oauth2.backends.DjangoOAuth2',\r\n    'django.contrib.auth.backends.ModelBackend',\r\n)\r\n# corsheader whitelist\r\nCORS_ORIGIN_WHITELIST = [\r\n    \"http://localhost:8000\",\r\n    \"http://localhost:8081\",\r\n    \"http://127.0.0.1:8000\",\r\n    \"http://localhost:3000\"\r\n]\r\nCORS_ORIGIN_ALLOW_ALL = True\r\nCORS_ALLOW_CREDENTIALS = True  # allow cookie\r\n\r\n# rest framework\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_AUTHENTICATION_CLASSES': (\r\n        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',\r\n        'drf_social_oauth2.authentication.SocialAuthentication',\r\n        'rest_framework.authentication.SessionAuthentication',\r\n    )\r\n}\r\n\r\nROOT_URLCONF = 'creader.TheBookshelf.urls'\r\n\r\n# templates\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [\r\n            os.path.join(BASE_DIR, 'creader/../templates'),\r\n        ],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n                # add these\r\n                'social_django.context_processors.backends',\r\n                'social_django.context_processors.login_redirect',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'TheBookshelf.wsgi.application'\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\r\n        'NAME': 'Creader',\r\n        'USER': 'postgres',\r\n        'PASSWORD': '1234',\r\n        'HOST': 'localhost',\r\n        'PORT': '5432',\r\n    }\r\n}\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/3.2/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'en-us'\r\n\r\nTIME_ZONE = 'UTC'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_L10N = True\r\n\r\nUSE_TZ = True\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\r\n\r\nSTATIC_URL = '/static/'\r\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\r\n# STATICFILES_DIRS = [\r\n#     os.path.join(BASE_DIR, \"static\"),\r\n# ]\r\n\r\nSTATICFILES_FINDERS = [\r\n    'django.contrib.staticfiles.finders.FileSystemFinder',\r\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\r\n]\r\n\r\nMEDIA_URL = '/media/'\r\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\r\n\r\n# wagtail\r\nADMINS = [\r\n    # ('Your Name', 'your_email@example.com'),\r\n]\r\nMANAGERS = ADMINS\r\n\r\n# Default to dummy email backend. Configure dev/production/local backend\r\n# as per https://docs.djangoproject.com/en/stable/topics/email/#email-backends\r\nEMAIL_BACKEND = 'django.core.mail.backends.dummy.EmailBackend'\r\n\r\nEMAIL_SUBJECT_PREFIX = '[Wagtail] '\r\n\r\nINTERNAL_IPS = ('127.0.0.1')\r\n\r\n# A sample logging configuration. The only tangible logging\r\n# performed by this configuration is to send an email to\r\n# the site admins on every HTTP 500 error when DEBUG=False.\r\n# See https://docs.djangoproject.com/en/stable/topics/logging for\r\n# more details on how to customize your logging configuration.\r\nLOGGING = {\r\n    'version': 1,\r\n    'disable_existing_loggers': False,\r\n    'filters': {\r\n        'require_debug_false': {\r\n            '()': 'django.utils.log.RequireDebugFalse'\r\n        }\r\n    },\r\n    'handlers': {\r\n        'mail_admins': {\r\n            'level': 'ERROR',\r\n            'filters': ['require_debug_false'],\r\n            'class': 'django.utils.log.AdminEmailHandler'\r\n        }\r\n    },\r\n    'loggers': {\r\n        'django.request': {\r\n            'handlers': ['mail_admins'],\r\n            'level': 'ERROR',\r\n            'propagate': True,\r\n        },\r\n    }\r\n}\r\n\r\n# WAGTAIL SETTINGS\r\n\r\n# This is the human-readable name of your Wagtail install\r\n# which welcomes users upon login to the Wagtail admin.\r\nWAGTAIL_SITE_NAME = 'Creader backend'\r\n\r\n# Replace the search backend\r\n# WAGTAILSEARCH_BACKENDS = {\r\n#  'default': {\r\n#    'BACKEND': 'wagtail.search.backends.elasticsearch5',\r\n#    'INDEX': 'myapp'\r\n#  }\r\n# }\r\n\r\n# Wagtail email notifications from address\r\nWAGTAILADMIN_NOTIFICATION_FROM_EMAIL = 'wagtail@myhost.io'\r\n\r\n# Wagtail email notification format\r\nWAGTAILADMIN_NOTIFICATION_USE_HTML = True\r\n\r\n# Reverse the default case-sensitive handling of tags\r\nTAGGIT_CASE_INSENSITIVE = True\r\n\r\n# Default primary key field type\r\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\r\n\r\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\r\n\r\n# stripe\r\nSTRIPE_PUB_KEY = 'pk_test_51IlivUBaL13Hgkoy4zeKPAQdCxH6Ys3d86BxwxBkWPFB0flVmb8eV46tocnKIIQA4NHGZpj0UeXQLHzJs8T2IaM800tTflYKN6 '\r\nSTRIPE_SECRET_KEY = 'sk_test_51IlivUBaL13HgkoypwU1xHXDwr0MCS5fctDtcsip78SBrXYqTyC42s0qZhRNlC8vVld51pyRwge7MIyzwK8B4Xm300XZ2uZJ9v '\r\nSTRIPE_WEBHOOK_KEY = 'whsec_R8I8dykTzlObMCNy2wla0C7WtqvTA5Nc'\r\n\r\n# social Authentication\r\n# Facebook\r\nSOCIAL_AUTH_FACEBOOK_KEY = '187272676634276'\r\nSOCIAL_AUTH_FACEBOOK_SECRET = '406d68e8f9d94582cb57b03a045c79ee'\r\n# Define SOCIAL_AUTH_FACEBOOK_SCOPE to get extra permissions from Facebook.\r\n# Email is not sent by default, to get it, you must request the email permission.\r\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\r\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\r\n    'fields': 'id, name, email'\r\n}\r\nSOCIAL_AUTH_USER_FIELDS = ['email', 'username', 'first_name', 'password']\r\n# Google\r\nSOCIAL_AUTH_GOOGLE_OAUTH2_KEY = \"690024386674-cpkugdn9h578rkollmjujuhj54db0v54.apps.googleusercontent.com\"\r\nSOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = \"DHBUz8Jy-KqAxb_85QsHGgGqP\"\r\n# Define SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE to get extra permissions from Google.\r\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [\r\n    'https://www.googleapis.com/auth/userinfo.email',\r\n    'https://www.googleapis.com/auth/userinfo.profile',\r\n]\r\n
===================================================================
diff --git a/creader/TheBookshelf/settings.py b/creader/TheBookshelf/settings.py
--- a/creader/TheBookshelf/settings.py
+++ b/creader/TheBookshelf/settings.py
@@ -45,6 +45,7 @@

 INSTALLED_APPS = [
     # customised app
+    'creader.TheBookshelf',
     'creader.TheBookshelf.app',
     'creader.TheBookshelf.user',
     'creader.TheBookshelf.payment',
