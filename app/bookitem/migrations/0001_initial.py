# Generated by Django 3.2.4 on 2021-07-28 21:25

import bookitem.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_name', models.CharField(default='', max_length=30, unique=True, verbose_name='Book name')),
                ('book_image', models.ImageField(default='media/image/default.png', max_length=1000,
                                                 upload_to=bookitem.models.image_upload_path,
                                                 verbose_name='Book image')),
                ('book_status',
                 models.CharField(choices=[('Ongoing', 'Ongoing'), ('Completed', 'Completed')], default='Ongoing',
                                  max_length=150, null=True, verbose_name='Book Status')),
                ('book_short_description', models.TextField(default='', verbose_name='Short description')),
                ('book_description', models.TextField(default='', verbose_name='Book Description')),
                ('total_vote', models.IntegerField(default=0, editable=False, verbose_name='Total vote')),
                ('total_click', models.IntegerField(default=0, editable=False, verbose_name='Total Click')),
                ('fav_num', models.IntegerField(default=0, editable=False, verbose_name='Total favorite number')),
                ('added_time', models.DateTimeField(auto_now_add=True, verbose_name='Added time')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('book_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                  related_name='authored_books', to=settings.AUTH_USER_MODEL,
                                                  verbose_name='author')),
            ],
            options={
                'verbose_name': 'Novel',
                'verbose_name_plural': 'Novel',
                'db_table': 'Books',
            },
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(default='', max_length=30, verbose_name='Category name')),
                ('category_code', models.CharField(default='', max_length=30, verbose_name='Category code')),
                ('is_tab', models.BooleanField(default=False, verbose_name='is Navigate')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='Added time')),
            ],
            options={
                'verbose_name': 'Type Category',
                'verbose_name_plural': 'Type categories',
                'db_table': 'Book Genre',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_commnet',
                                           to='bookitem.book')),
                ('dislikes',
                 models.ManyToManyField(blank=True, related_name='comment_dislikes', to=settings.AUTH_USER_MODEL)),
                (
                'likes', models.ManyToManyField(blank=True, related_name='comment_likes', to=settings.AUTH_USER_MODEL)),
                ('parent',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies',
                                   to='bookitem.comment')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'db_table': 'Comment',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_title', models.CharField(default='', max_length=150, verbose_name='Chapter title')),
                ('chapter_body', models.TextField(default='', verbose_name='Chapter text')),
                ('word_count', models.IntegerField(default=0, verbose_name='Word count')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('publish_status',
                 models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft'), ('Trash', 'Trash')],
                                  default='Published', max_length=150)),
                ('book',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chapter',
                                   to='bookitem.book', verbose_name='chapter')),
            ],
            options={
                'verbose_name': 'chapter',
                'verbose_name_plural': 'chapters',
                'db_table': 'Chapter',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='book_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='books',
                                    to='bookitem.bookcategory', verbose_name='book type'),
        ),
    ]
